<?php
/**
 * Repository: https://github.com/kbylin0531/Sharin.git
 * User: Linzh
 * Date: 11/13/16
 * Time: 3:19 PM
 */

namespace Web\System\Sign;

use Sharin\Core\Logger;
use Sharin\Database\Model;

/**
 * Class SignModel
 * @package Sharin\Addon\Sign
 */
class SignModel extends Model implements SignInterface
{

    protected function validateInsert($fields)
    {
        return false;
    }

    protected function tablePrefix()
    {
        return 'psr_'; // TODO: Change the autogenerated stub
    }

    protected function tableName()
    {
        return 'member';
    }

    public function validateDelete($where)
    {
        return true;
    }

    protected function validateUpdate($fields, $where)
    {
        return true;
    }

    protected $tablename = 'srg_member';

    public function getInfo(string $username)
    {
        return $this->where(['username' => $username])->find();
    }

    public function signIn($username, $password)
    {
        $info = $this->where(['username' => $username])->find();

        if (!empty($info['password']) and $info['password'] === $password) {
            return $info;
        } else {
            $this->error = '{_PASSWD_INVALID_}';
            return false;
        }
    }

    public function signInWithEmail($email, $password)
    {
        $info = $this->where(['email' => $email])->find();
        if (!empty($info['password']) and $info['password'] === $password) {
            unset($info['password']);//for safety
            return $info;
        }
        return false;
    }

    public function signInWithPhone($phone, $password)
    {
        $info = $this->where(['phone' => $phone])->find();
        if (!empty($info['password']) and $info['password'] === $password) {
            return $info;
        }
        return false;
    }

    public function changePassword($id, $newPassword)
    {
        if (empty($newPassword)) {
            $this->error = "密码不能修改为空";
            return false;
        }
        return $this->update([
            'password' => $newPassword
        ], [
            'id' => $id,
        ]);

    }

    protected $validate = [
        'username' => '',
        'password' => '',
        'email' => '',
        'phone' => '',
        'nickname' => '',
        'profile' => '',
        'sex' => '',
        'birthday' => '',
        'status' => '',
    ];

    /**
     *
     * @param array $fields
     * @return bool
     */
    public function signUp(array $fields)
    {
        if (false === $this->fields($fields)->insert()) {
            return false;
        }
        return true;
    }

    public function signOut()
    {
        return true;
    }

    /**
     * TODO:
     * @return array
     */
    public function getLastLogin()
    {
        return [];
    }

    /**
     * TODO:
     * @return array
     */
    public function getLoginHistory()
    {
        return [];
    }

}